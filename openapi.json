{
  "openapi": "3.0.0",
  "paths": {
    "/objects": {
      "post": {
        "operationId": "createObject",
        "summary": "Create a new Object",
        "parameters": [],
        "responses": {
          "201": {
            "description": "The key and presigned URL of the Object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateObjectResponseDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getObjects",
        "summary": "Get all Objects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Objects were found and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HermesObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/objects/{id}": {
      "get": {
        "operationId": "getObject",
        "summary": "Get an Object by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Object was found and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HermesObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteObject",
        "summary": "Delete an Object by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/link-sets": {
      "post": {
        "operationId": "createLinkSet",
        "summary": "Create a new Link Set",
        "parameters": [],
        "responses": {
          "201": {
            "description": "The Link Set was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkSet"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateLinkSet",
        "summary": "Update an existing Link Set",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertLinkSetDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Link Set was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkSet"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getLinkSets",
        "summary": "Get all paginated Link Sets",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Link Sets were found and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinkSet"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/link-sets/{id}": {
      "get": {
        "operationId": "getLinkSet",
        "summary": "Get a Link Set by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Link Set was found and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkSet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteLinkSet",
        "summary": "Delete a Link Set by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/external-resolvers": {
      "post": {
        "operationId": "createExternalResolver",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertExternalResolverDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "updateExternalResolver",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertExternalResolverDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "getManyExternalResolvers",
        "summary": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/external-resolvers/{id}": {
      "get": {
        "operationId": "getExternalResolver",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "deleteExternalResolver",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/*": {
      "get": {
        "operationId": "ResolverController_resolve",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/.well-known/resolver": {
      "get": {
        "operationId": "ResolverController_getResolverMetadata",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "Hermes",
    "description": "Hermes Link Resolver",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateObjectResponseDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The ID of the object to be created."
          },
          "presignedUrl": {
            "type": "string",
            "description": "The presigned URL to upload the object to."
          }
        },
        "required": [
          "key",
          "presignedUrl"
        ]
      },
      "HermesObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object"
          },
          "name": {
            "type": "string",
            "description": "The name of the object"
          },
          "mimeType": {
            "type": "string",
            "description": "The MIME type of the object"
          },
          "size": {
            "type": "number",
            "description": "The size of the object"
          },
          "url": {
            "type": "string",
            "description": "A presigned URL of the fetch the object"
          }
        },
        "required": [
          "id",
          "name",
          "mimeType",
          "size",
          "url"
        ]
      },
      "LinkType": {
        "type": "string",
        "description": "The type of the link.",
        "enum": [
          "HREF",
          "OBJECT"
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "relationType": {
            "type": "string",
            "description": "The relation type of the link."
          },
          "type": {
            "$ref": "#/components/schemas/LinkType"
          },
          "href": {
            "type": "string",
            "description": "The href of the link."
          },
          "objectKey": {
            "type": "string",
            "description": "The object key of the link, if TYPE is OBJECT."
          },
          "title": {
            "type": "string",
            "description": "The title of the link"
          },
          "lang": {
            "description": "The language of the link.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation date of the Link."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update date of the Link."
          }
        },
        "required": [
          "relationType",
          "type",
          "title",
          "createdAt",
          "updatedAt"
        ]
      },
      "LinkSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Link Set."
          },
          "identifier": {
            "type": "string",
            "description": "The identifier of the Link Set."
          },
          "qualifier": {
            "type": "string",
            "description": "The qualifier of the Link Set."
          },
          "links": {
            "description": "The links of the Link Set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation date of the Link Set."
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update date of the Link Set."
          }
        },
        "required": [
          "qualifier",
          "links",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpsertLinkDto": {
        "type": "object",
        "properties": {
          "relationType": {
            "type": "string",
            "description": "The relation type of the link."
          },
          "href": {
            "type": "string",
            "description": "The href of the link."
          },
          "objectKey": {
            "type": "string",
            "description": "The object key of the link, if TYPE is OBJECT."
          },
          "title": {
            "type": "string",
            "description": "The title of the link."
          },
          "lang": {
            "description": "The language of the link.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "relationType",
          "href",
          "title"
        ]
      },
      "UpsertLinkSetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Link Set. This causes an UPDATE, not a CREATE."
          },
          "identifier": {
            "type": "string",
            "description": "The identifier of the Link Set."
          },
          "qualifier": {
            "type": "string",
            "description": "The qualifier of the Link Set."
          },
          "links": {
            "description": "The links of the Link Set.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertLinkDto"
            }
          }
        },
        "required": [
          "identifier",
          "qualifier",
          "links"
        ]
      },
      "UpsertExternalResolverDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the External Resolver. This causes an UPDATE, not a CREATE."
          },
          "href": {
            "type": "string",
            "description": "The href of the External Resolver."
          },
          "pattern": {
            "type": "string",
            "description": "The pattern of the External Resolver."
          },
          "qualifier": {
            "type": "string",
            "description": "The qualifier of the External Resolver."
          },
          "childExternalResolvers": {
            "description": "The creation data of the External Resolver.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "href",
          "pattern",
          "qualifier",
          "childExternalResolvers"
        ]
      }
    }
  }
}